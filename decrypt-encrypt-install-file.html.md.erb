---
title: Decrypting and Encrypting Installation Files
---

This topic is intended for product teams who package, distribute, and upgrade [Pivotal Cloud Foundry&reg;](https://network.pivotal.io/products/pivotal-cf) (PCF) products across releases.

This topic describes the installation and product template YAML files in your Pivotal Cloud Foundry&reg; Operations Manager VM. It also provides instructions on viewing and modifying the installation YAML files so that product teams can migrate content.

##<a id='understand-files'></a> Understanding Ops Manager Installation and Product Template Files ##

During the installation process, Ops Manager combines information from the installation and product template YAML files to generate the manifests that define your deployment.

**Installation files**: PCF stores user-entered data and automatically generated values for Ops Manager in installation files. PCF encrypts and stores these files in the directory `/var/tempest/workspaces/default`.

You must decrypt them to view the contents, edit the files as necessary for your content migration, then re-encrypt them.

**Product templates**: Ops Manager uses product templates to create forms and obtain user input. The `job_types` and `property_blueprint` key-value pairs in a product template determine how the `jobs` and `properties` sections display in the installation file. Ops Manager stores product templates in the directory `/var/tempest/workspaces/default/metadata`.

You can edit these files. User input does not alter these files.

##<a id='decrypt-encrypt'></a> Decrypting and Encrypting Installation Files ##

1. Log into the Ops Manager VM using `ssh`.

    **AWS** or **OpenStack**: Use `ssh-add` to add to your environment the key pair you created when first deploying PCF. Log in with `ssh ubuntu@REMOTE_SERVER`, replacing `REMOTE_SERVER` with the IP address for your Ops Manager VM.
    <pre class="terminal">
    $ ssh-add MY-PRIVATE-KEY.pem
    Identity added: MY-PRIVATE-KEY.pem (MY-PRIVATE-KEY.pem)

    $ ssh ubuntu@REMOTE\_SERVER
    Are you sure you want to continue connecting (yes/no)? yes
    Welcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-74-generic x86_64)
    </pre>

    **VMWare IaaS product**: Log into the Ops Manager VM with `ssh tempest@REMOTE_SERVER`, replacing `REMOTE_SERVER` with the IP address for your Ops Manager VM. When prompted, enter the admin password that you set when you installed Ops Manager. For more information, refer to the step on setting passwords in [Complete the vApp Wizard and Deploy Ops Manager](../pivotalcf/customizing/pcf-vchs-vcloud.html#deploying-from-catalog) (for vCloud Air and vCloud) or [Deploying Operations Manager to vSphere](../pivotalcf/customizing/deploying-vm.html) (for vSphere).
    <pre class="terminal">
    $ ssh tempest@REMOTE\_SERVER
    tempest@REMOTE\_SERVER's password:
    </pre>

1. `cd` into the directory `/var/tempest/workspaces/default/metadata` on the Ops Manager VM.

    <pre class="terminal">
    $ cd /var/tempest/workspaces/default/metadata
    </pre>

1. Clone the encryption/decryption script files from the Pivotal encrypt-decrypt scripts repository on GitHub:

    <pre class="terminal">
    sudo git clone https://github.com/pivotal-cf/encrypt-decrypt-scripts
    </pre>

    This repo contains the following files:
    * `decrypt-ops.sh`
    * `encrypt-ops.sh`
    * `eos.rb`

1. Use `sudo cp` to copy the files to the protected `/var/tempest/workspaces/default` parent directory.

    <pre class="terminal">
    $ sudo cp encrypt-decrypt-scripts/*.sh ..
    $ sudo cp encrypt-decrypt-scripts/eos.rb ..
    </pre>

1. `cd` up to the `/var/tempest/workspaces/default` directory.

    <pre class="terminal">
    $ cd ..
    </pre>

1. Change the permissions of the `decrypt-ops.sh` and `encrypt-ops.sh` scripts.
    <pre class="terminal">
    $ sudo chmod 755 *.sh
    </pre>

1. Run the `decrypt` command to create the `decrypted-installation.yml` and `decrypted-installed.yml` files.

    Replace `PASSWORD` with your Ops Manager UserID password.

    <pre class="terminal">
    $ sudo ./decrypt.sh PASSWORD
    </pre>

    This script does the following:
     * Searches the `/var/tempest/workspaces/default` for the installation YAML files and creates decrypted copies.
     * Creates a directory `decrypted` and stores the decrypted files in this directory.

1. Review and edit the files as necessary for your content migration, and copy them into the `/var/tempest/workspaces/default/decrypted` directory.

1. Run the `encrypt` command on the modified decrypted files.

    Replace `PASSWORD` with the password you created when you first logged into Ops Manager through your browser.

    <pre class="terminal">
    $ sudo ./encrypt.sh PASSWORD
    </pre>

    This script encrypts the decrypted files and stores the resulting output in the `/var/tempest/workspaces/default` directory, which overwrites the existing `installation.yml` file and adds a new file, `installed-installation.yml`. `encrypt-ops.sh` does not overwrite the `actual-installation.yml` file.

    <p class='note'><strong>Note</strong>: Ensure that you back up the edited and encrypted <code>installation.yml</code> and <code>installed-installation.yml</code> files for future reference.</p>


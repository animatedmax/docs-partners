---
title: Deploying a Pivotal Cloud Foundry&reg; Product Using BOSH
---
<p class='note'><strong>Note</strong>: This topic is part of the <a href='./creating.html'>Creating a Pivotal Cloud Foundry® Product Tile</a> tutorial.  Before beginning this procedure, you should confirm that you meet the <a href='./creating.html#prereqs'>tutorial prerequisites</a>.</p>

BOSH is Cloud Foundry’s orchestration tool for installing and managing software and virtual machines. A product release should install successfully using BOSH before it can be crafted into an Ops Manager tile.

Refer to the [BOSH documentation](https://bosh.io/) for more information about how to create a BOSH release of your own.

This topic leads you through the process of deploying an example BOSH release consisting of the [Nginx](http://nginx.org/) webserver.

## <a id='prep-environment'></a>Step 1: Prepare an Environment

First, you must prepare an environment on your IaaS. For this tutorial, complete the following procedure to prepare an environment on Amazon Web Services (AWS). The steps differ slightly for other IaaSes, such as vSphere or OpenStack.

1. Run the following command to clone the Example Tile Docs Resources git repository.
  <pre class='terminal'>
    $ git clone git@github.com:pivotal-cf-experimental/example-tile-docs-resources.git
  </pre>

1. `cd` into the cloned directory:
  <pre class='terminal'>
    $ cd example-tile-docs-resources
  </pre>

1. Create a key pair for your AWS Virtual Machines and pipe it to a local file named MyKeyPair.pem:
  <pre class='terminal'>
    $ aws ec2 create-key-pair --key-name MyKeyPair \
    | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["KeyMaterial"]' \
    \> MyKeyPair.pem
  </pre>

1. Provision your AWS account with the resources specified in the template:
  <pre class='terminal'>
    $ aws cloudformation create-stack \
    --stack-name examplestack \
    --template-body file://cloudformation.json \
    --parameters \
    ParameterKey=KeyName,ParameterValue=MyKeyPair  \
    --capabilities CAPABILITY_IAM
  </pre>

1. Allocate an Elastic IP for your BOSH instance by running the following command. The terminal displays the IP address for your BOSH instance. Record this IP address for use in a step below.
  <pre class='terminal'>
    $ aws ec2 allocate-address --domain vpc
    {
     "PublicIp": "52.8.233.151",
     "Domain": "vpc",
     "AllocationId": "eipalloc-13618976"
    }
  </pre>

## <a id='provision-bosh'></a>Step 2: Install a BOSH on Your IaaS

Complete the following procedure to install a BOSH on your IaaS. You use this BOSH to deploy the example release.
See [Intializing an environment](http://bosh.io/docs/init.html) to learn about deploying BOSH.

The Example Tile Docs repo you cloned in the previous step contains a BOSH manifest, `bosh.yml`, for the BOSH we will use to deploy the example release.

1. `cd` into `example-tile-docs-resources`.

1. Open `bosh.yml`. This is the BOSH manifest file for the BOSH you will use to deploy the example release.

1. In `bosh.yml`, follow the instructions in comments to fill in the details specific to your own AWS account.

1. Run the following command to deploy your BOSH instance:

   <pre class='terminal'>
    $ bosh-init deploy ./bosh.yml
    Deployment manifest: '/Users/d/my-bosh/bosh.yml'
    Deployment state: '/Users/d/my-bosh/bosh-state.json'
    Finished deploying (00:16:35)
    Stopping registry... Finished (00:00:00)
    Cleaning up rendered CPI jobs... Finished (00:00:00)
  </pre>

## <a id='create-manifest'></a>Step 3: Prepare the BOSH Manifest for the Release

In this step, we prepare a BOSH manifest for the example product release. The BOSH instance deployed in the last step will use this manifest to deploy the example product. When [deploying a product tile with Ops Manager](./deploying-with-ops-man-tile.html), Ops Manager generates a manifest like this using a template we provide. However, using a manifest we create manually to deploy without Ops Manager allows us to confirm that the software release is composed properly, as well as gives us an opportunity to understand what goes into a BOSH manifest.

1. Target your BOSH:
  <pre class='terminal'>
    $ bosh target 52.8.50.119
    Target set to `my-bosh'
    Your username: admin
    Enter password: admin
  </pre>

1. Upload your release by running:
  <pre class='terminal'>
    $ bosh upload release example-release-7+dev.2.tgz
    Acting as user 'admin' on 'my-bosh'
    Verifying release...
    Task 29 done
    Started        2015-07-31 00:02:27 UTC
    Finished    2015-07-31 00:02:27 UTC
    Duration    00:00:00
    Release uploaded
  </pre>

1. Upload the latest AWS Xen-HVM Light stemcell to your BOSH by running:
  <pre class='terminal'>
    $ bosh upload stemcell https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3026
    Acting as user 'admin' on 'my-bosh'
    Using remote stemcell `https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3026'
    Director task 15
    Started update stemcell
    Started update stemcell > Downloading remote stemcell. Done (00:00:02)
    Started update stemcell > Extracting stemcell archive. Done (00:00:00)
    Started update stemcell > Verifying stemcell manifest. Done (00:00:00)
    Started update stemcell
    Done update stemcell (00:00:11)
    Task 15 done
    Started   2015-07-30 21:23:09 UTC
    Finished  2015-07-30 21:23:20 UTC
    Duration  00:00:11
    Stemcell uploaded and created.
  </pre>

1. Get your BOSH Director (BOSH) **UUID** by running the following command. You will need to enter this ID in the BOSH manifest in the next step.
  <pre class='terminal'>
    $ bosh status
    Config
      /Users/d/.bosh_config
    Director
      Name       my-bosh
      URL        https://52.8.50.119:25555
      Version    1.3012.0 (00000000)
      User       admin
      UUID       729452b0-2c1f-4763-a6ec-cf43e7f0ba89
  </pre>

1. Open `example-release.yml`. This is the BOSH manifest file for the example release. The BOSH you deployed previously will use this manifest to deploy the example product.

1. In `example-release.yml`, follow the instructions in comments to fill in the details specific to your BOSH deployment.

1. Run the following command to set the deployment.
  <pre class='terminal'>
    $ bosh deployment ./example-release.yml
  </pre>

1. Deploy the example release:
  <pre class='terminal'>
   $ bosh deploy
   Acting as user 'admin'
   Are you sure you want to deploy? (type 'yes' to continue): yes
   Task 31 done
   Started     2015-07-31 00:04:19 UTC
   Finished    2015-07-31 00:12:52 UTC
   Duration    00:08:33<br>
   Deployed `example-product-906ec4aecbec172c9706' to `my-bosh'
  </pre>

## <a id='confirm-deployment'></a>Step 4: Confirm Successful Deployment

1. Confirm that the webserver VM is running:
  <pre class='terminal'>
    $ bosh vms
    Acting as user 'admin' on 'my-bosh'
    Deployment `example-product-906ec4aecbec172c9706'
    Director task 32
    Task 32 done
    +--------------+---------+---------------+-----------+
    | Job/index    | State   | Resource Pool | IPs       |
    +--------------+---------+---------------+-----------+
    | web_server/0 | running | vms           | 10.0.16.5 |
    +--------------+---------+---------------+-----------+
  </pre>

1. SSH into your VPC using the IP that you [allocated](#prep-environment) and the key pair that you [created](#prep-environment).
  <pre class='terminal'>
    $ ssh-add MyKeyPair.pem
    Identity added: MyKeyPair.pem (MyKeyPair.pem)
    $ ssh ubuntu@BOSH-IP-ADDRESS
    Welcome to Ubuntu 14.04.2 LTS (GNU/Linux 3.13.0-59-generic x86_64)
  </pre>

1. To confirm successful deployment, view the 'hello world' page served by the webserver in the example product.
  <pre class='terminal'>
    $ curl 10.0.16.5
    &lt;html&gt;
     &lt;body&gt;
       &lt;h1&gt;Hello World&lt;/h1&gt;
     &lt;/body&gt;
    &lt;/html&gt;
  </pre>

## <a id='cleanup-vpc'></a>Step 5: Terminate VMs

Use the AWS EC2 Dashboard to terminate the instances in your VPC before proceeding to [Deploying Your Product as a Tile](./deploying-with-ops-man-tile.html). See [the AWS documentation on terminating instances](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html).
